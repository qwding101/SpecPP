[{"path":"https://qwding101.github.io/SpecPP/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 SpecPP authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"import-package-and-data","dir":"Articles","previous_headings":"","what":"Import package and data","title":"Analyzing Lansing Woods data","text":"Lansing Woods dataset, available spatstat package, contains spatial distributions six different tree species.  proceeding analysis, first examine side lengths observational window. window small, spectral estimator evaluated coarse frequency grid, limiting ability capture frequency-domain characteristics point pattern. contrast, excessively large window can make computations unfeasible. recommend side lengths 20 40, offer good balance computational efficiency resolution. shown summary(lansing), window unit square (since spatstat rescaled original window). small spectral analysis, rescale factor 1/20: Now rescaled dataset spp side lengths 20 suitable analysis.","code":"library(SpecPP) library(spatstat)  plot(split(lansing), pch = 20, cex = .1, main = \"Point pattern of Lansing Woods\") summary(lansing) #> Marked planar point pattern:  2251 points #> Average intensity 2251 points per square unit (one unit = 924 feet) #>  #> *Pattern contains duplicated points* #>  #> Coordinates are given to 3 decimal places #> i.e. rounded to the nearest multiple of 0.001 units (one unit = 924 feet) #>  #> Multitype: #>          frequency proportion intensity #> blackoak       135 0.05997335       135 #> hickory        703 0.31230560       703 #> maple          514 0.22834300       514 #> misc           105 0.04664594       105 #> redoak         346 0.15370950       346 #> whiteoak       448 0.19902270       448 #>  #> Window: rectangle = [0, 1] x [0, 1] units #> Window area = 1 square unit #> Unit of length: 924 feet scale.factor = 1/20 spp = rescale(lansing, scale.factor) Window(spp) #> window: rectangle = [0, 20] x [0, 20] units (one unit = 46.2 feet)"},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"estimate-pseudo-spectrum","dir":"Articles","previous_headings":"","what":"Estimate pseudo-spectrum","title":"Analyzing Lansing Woods data","text":"estimate pseudo-spectrum spp, use kernel spectral density estimator (KSDE). calculation KSDE involves two key steps: intensity function estimation bandwidth selection.","code":""},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"intensity-function-estimation","dir":"Articles","previous_headings":"Estimate pseudo-spectrum","what":"Intensity function estimation","title":"Analyzing Lansing Woods data","text":"KSDE involves first-order intensity function, needs estimated. nonparametric approaches (e.g., spatstat::density.ppp()) available, asymptotic properties KSDE established parametric form intensity. Therefore, tree species, fit log-linear model intensity function using Cartesian coordinates: plot fitted intensity verify whether adequately captures spatial inhomogeneity. figure suggests model ~ x + y + x:y may overly simplistic. However, pedagogical purposes, proceed specification.  practice, additional spatial covariates can incorporated improve intensity model. covariates specified model formula provided data argument spatstat.model::ppm(). example, two covariates pH gradient, combined list passed data argument (check ?spatstat.model::ppm details format covariates):","code":"spps = split(spp) fit.lambda = vector(\"list\", length(spps)) names(fit.lambda) = names(spps) for (i in seq_along(spps)){   fit.lambda[[i]] = predict.ppm(ppm(spps[[i]] ~ x + y + x:y)) } plot(as.solist(fit.lambda), main = \"Estimated intensity\") # Just an example. This dataset from spatstat doesn't have any covariate. covars = list(pH, gradient) for (i in seq_along(spps)){   fit.lambda[[i]] = predict.ppm(ppm(spps[[i]] ~ x + y + x:y + pH + gradient,                                     data = covars)) }"},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"bandwidth-selection","dir":"Articles","previous_headings":"Estimate pseudo-spectrum","what":"Bandwidth selection","title":"Analyzing Lansing Woods data","text":"Selecting good bandwidth crucial reliable spectral estimation. handled select_band() function, requires following arguments: ppp: point pattern inten.formula: model intensity (mentioned previous section), example, \"~ x + y + x:y\". Note formula must provided string. band.range: numeric vector defining search space optimal bandwidth. additional spatial covariates specified inten.formula, corresponding data must provided via data.covariate argument. arguments select_band() can left default values.  see figure, select_band() calculates spectral divergence across candidate bandwidths band.range. bandwidth minimizing spectral divergence optimal bandwidth select, cv$OptimalBandwidth = 0.83 (marked blue dashed line).","code":"cv = select_band(ppp = spp,                  inten.formula = \"~ x + y + x:y\",                  band.range = seq(0.7, 1.1, .01))  plot(x = cv$Result[1,], y = cv$Result[2,], type = \"l\",      xlab = \"Bandwidth\", ylab = \"Spectral divergence\") abline(v = cv$OptimalBandwidth, col = \"blue\", lwd = 2, lty = \"dashed\")"},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"important-considerations-for-bandwidth-selection","dir":"Articles","previous_headings":"Estimate pseudo-spectrum > Bandwidth selection","what":"Important considerations for bandwidth selection","title":"Analyzing Lansing Woods data","text":"Resolution band.range: search space neither fine coarse balance computational efficiency accuracy. Coverage band.range: narrow search range may fail capture global minimum. minimum lies boundary specified range, select_band() issues warning suggesting broader search space. However, safeguard foolproof—cases warning appears even local minimum selected. example, specifying band.range = seq(0.96, 1.05, 0.01) example fails identify global minimum, local minimum lies inside search range. mitigate risks, recommend running select_band() multiple times different band.range, visualizing results ensure chosen bandwidth robust constrained inadequate search space.","code":""},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"calculate-the-ksde","dir":"Articles","previous_headings":"Estimate pseudo-spectrum","what":"Calculate the KSDE","title":"Analyzing Lansing Woods data","text":"Finally, can calculate KSDE fitted intensity cross-validated bandwidth. output periodogram_smooth() list 6 (marginal) + 15 (cross) = 21 KSDE matrices. Note KSDE cross pseudo-spectrum complex-valued. need visualize real imaginary parts separately. default, plot_pairs() plot real part radially averaged spectral estimate:  examine imaginary part, set type = \"Im\". figure shows, values almost zero, particularly marginal cases exactly zero. Thus, real part primary focus analysis.","code":"KSDE = periodogram_smooth(ppp = spp,                           inten.formula = \"~ x + y + x:y\",                           bandwidth = cv$OptimalBandwidth) names(KSDE) #>  [1] \"blackoak, blackoak\" \"blackoak, hickory\"  \"blackoak, maple\"    #>  [4] \"blackoak, misc\"     \"blackoak, redoak\"   \"blackoak, whiteoak\" #>  [7] \"hickory, hickory\"   \"hickory, maple\"     \"hickory, misc\"      #> [10] \"hickory, redoak\"    \"hickory, whiteoak\"  \"maple, maple\"       #> [13] \"maple, misc\"        \"maple, redoak\"      \"maple, whiteoak\"    #> [16] \"misc, misc\"         \"misc, redoak\"       \"misc, whiteoak\"     #> [19] \"redoak, redoak\"     \"redoak, whiteoak\"   \"whiteoak, whiteoak\" plot_pairs(est.list = KSDE, ppp = spp) plot_pairs(est.list = KSDE, ppp = spp, type = \"Im\")"},{"path":"https://qwding101.github.io/SpecPP/articles/lansing.html","id":"coherence-analysis","dir":"Articles","previous_headings":"","what":"Coherence analysis","title":"Analyzing Lansing Woods data","text":"Similar spectral analysis time series, can calculate coherence partial coherence based pseudo-spectrum point processes. coherence() function computes measures non-overlaping frequencies extracts maxima. default (type = \"partial\"), returns maximal partial coherence two point processes. code , calculate maximal coherence partial coherence pairwise point processes. Instead summarizing single value, plot_coher() function allows us visualize coherence partial coherence values across non-overlapping frequencies.","code":"coh.partial = coherence(sp.est = KSDE, ppp = spp) # Maximal partial coherence #> Number of frequencies to pick the maximum partial coherence: 25 (this value should not be too small). coh = coherence(sp.est = KSDE, ppp = spp, type = \"normal\") # Maximal coherence #> Number of frequencies to pick the maximum coherence: 25 (this value should not be too small). round(coh.partial, 2) #>          blackoak hickory maple misc redoak whiteoak #> blackoak     1.00    0.85  0.96 0.98   0.96     0.96 #> hickory      0.85    1.00  0.88 0.88   0.86     0.86 #> maple        0.96    0.88  1.00 0.99   0.96     0.98 #> misc         0.98    0.88  0.99 1.00   0.98     0.98 #> redoak       0.96    0.86  0.96 0.98   1.00     0.96 #> whiteoak     0.96    0.86  0.98 0.98   0.96     1.00 round(coh, 2) #>          blackoak hickory maple misc redoak whiteoak #> blackoak     1.00    0.10  0.17 0.54   0.20     0.20 #> hickory      0.10    1.00  0.31 0.13   0.05     0.05 #> maple        0.17    0.31  1.00 0.64   0.38     0.33 #> misc         0.54    0.13  0.64 1.00   0.70     0.35 #> redoak       0.20    0.05  0.38 0.70   1.00     0.21 #> whiteoak     0.20    0.05  0.33 0.35   0.21     1.00 plot_coher(sp.est = KSDE,            coh.mat = coh,            partial.coh.mat = coh.partial,            ylim = c(0, 0.85))"},{"path":"https://qwding101.github.io/SpecPP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Qi-Wen Ding. Author, maintainer.","code":""},{"path":"https://qwding101.github.io/SpecPP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ding Q (2025). SpecPP: Spectral Analysis Point Processes. R package version 1.0.0, https://qwding101.github.io/SpecPP/, https://github.com/qwding101/SpecPP.","code":"@Manual{,   title = {SpecPP: Spectral Analysis for Point Processes},   author = {Qi-Wen Ding},   year = {2025},   note = {R package version 1.0.0, https://qwding101.github.io/SpecPP/},   url = {https://github.com/qwding101/SpecPP}, }"},{"path":"https://qwding101.github.io/SpecPP/index.html","id":"specpp","dir":"","previous_headings":"","what":"Spectral Analysis for Point Processes","title":"Spectral Analysis for Point Processes","text":"R package spectral analysis multivariate spatial point patterns rectangular region (Ding et al., 2025). Given multivariate point pattern parametric model intensity function, package facilitates characterization frequency-domain features data kernel smoothing. includes functions spectral density estimation, bandwidth selection, visualization, coherence analysis.","code":""},{"path":"https://qwding101.github.io/SpecPP/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spectral Analysis for Point Processes","text":"can install development version SpecPP GitHub :","code":"# install.packages(\"pak\") pak::pak(\"qwding101/SpecPP\")"},{"path":"https://qwding101.github.io/SpecPP/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"Spectral Analysis for Point Processes","text":"tutorial demonstrates use SpecPP analyze multivariate point pattern data.","code":""},{"path":"https://qwding101.github.io/SpecPP/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Spectral Analysis for Point Processes","text":"Ding, Q. W., Yang, J., & Shin, J. (2025). Pseudo-spectra multivariate inhomogeneous spatial point processes. arXiv preprint arXiv:2502.09948. Yang, J., & Guan, Y. (2024). Fourier analysis spatial point processes. arXiv preprint arXiv:2401.06403.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/CohByFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (partial) coherence for a given frequency — CohByFreq","title":"Compute (partial) coherence for a given frequency — CohByFreq","text":"Compute (partial) coherence given frequency","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/CohByFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (partial) coherence for a given frequency — CohByFreq","text":"","code":"CohByFreq(   w1,   w2,   sp.est,   type = \"partial\",   i = NULL,   j = NULL,   sp.IR = NULL,   H.list = NULL,   ppp = NULL )"},{"path":"https://qwding101.github.io/SpecPP/reference/CohByFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (partial) coherence for a given frequency — CohByFreq","text":"w1, w2 Frequency vector (allow frequency values evaluated sp.est) sp.est list kernel spectral estimate matrices point pattern. type type = 'partial', compute partial coherence. type = 'normal', compute coherence , j Optional. Index multivariate point process. sp.IR Optional. Spectrum estimate intensity reweighted process, calculated IRspec(). argument specified, w1, w2, H.list, ppp required. H.list Optional. list Hmatrix(). argument required sp.IR unspecified. ppp Optional. Point pattern. argument required H.list unspecified.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/H.h.lambda.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute H.h.lambda.1 in the centered DFT — H.h.lambda.1","title":"Compute H.h.lambda.1 in the centered DFT — H.h.lambda.1","text":"Compute H.h.lambda.1 centered DFT","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/H.h.lambda.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute H.h.lambda.1 in the centered DFT — H.h.lambda.1","text":"","code":"H.h.lambda.1(w2, w1, a, taper, A1, A2, inten.fitted)"},{"path":"https://qwding101.github.io/SpecPP/reference/H.h.lambda.1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute H.h.lambda.1 in the centered DFT — H.h.lambda.1","text":"w1, w2 numeric value vector frequency values horizontal vertical directions, respectively. Taper coefficient, value within unit interval. = 1, taper applied. taper Data taper function. A1, A2 Side lengths observation window. inten.fitted Intensity function individual point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/Hmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the H matrix used in coherence.R — Hmatrix","title":"Compute the H matrix used in coherence.R — Hmatrix","text":"Compute H matrix used coherence.R","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/Hmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the H matrix used in coherence.R — Hmatrix","text":"","code":"Hmatrix(sp.est, ppp)"},{"path":"https://qwding101.github.io/SpecPP/reference/Hmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the H matrix used in coherence.R — Hmatrix","text":"sp.est list kernel spectral estimate matrices ppp. ppp Point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/IRspec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the spectrum of the intensity reweighted process — IRspec","title":"Compute the spectrum of the intensity reweighted process — IRspec","text":"Compute spectrum intensity reweighted process","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/IRspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the spectrum of the intensity reweighted process — IRspec","text":"","code":"IRspec(w1, w2, sp.est, i = NULL, j = NULL, H.list = NULL, ppp)"},{"path":"https://qwding101.github.io/SpecPP/reference/IRspec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the spectrum of the intensity reweighted process — IRspec","text":"w1, w2 Frequency vector (allow frequency values evaluated sp.est) sp.est list kernel spectral estimate matrices point pattern. , j Optional. Index multivariate point process. H.list Optional. list Hmatrix(). ppp Point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/bartlett_uni.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaled Battlett kernel (univariate) — bartlett_uni","title":"Scaled Battlett kernel (univariate) — bartlett_uni","text":"Scaled Battlett kernel (univariate)","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/bartlett_uni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaled Battlett kernel (univariate) — bartlett_uni","text":"","code":"bartlett_uni(v, b)"},{"path":"https://qwding101.github.io/SpecPP/reference/bartlett_uni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaled Battlett kernel (univariate) — bartlett_uni","text":"v Input value. b Bandwidth.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/coherence.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum coherence and partial coherence matrix — coherence","title":"Maximum coherence and partial coherence matrix — coherence","text":"Computes coherence partial coherence matrix multivatiate (multitype) point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/coherence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum coherence and partial coherence matrix — coherence","text":"","code":"coherence(sp.est, ppp, type = \"partial\", all = FALSE)"},{"path":"https://qwding101.github.io/SpecPP/reference/coherence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum coherence and partial coherence matrix — coherence","text":"sp.est List. kernel spectral estimate periodogram_smooth(). ppp point pattern class \"ppp\". type \"partial\" (default), calculate partial coherence. \"normal\", calculate coherence. Logical. TRUE, extract maximum (partial) coherence across frequencies, recommended.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/coherence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum coherence and partial coherence matrix — coherence","text":"matrix entry storing maximum (partial) coherence two individual point processes.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/coherence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum coherence and partial coherence matrix — coherence","text":"","code":"library(spatstat) #> Loading required package: spatstat.data #> Loading required package: spatstat.univar #> spatstat.univar 3.1-1 #> Loading required package: spatstat.geom #> spatstat.geom 3.3-5 #> Loading required package: spatstat.random #> spatstat.random 3.3-2 #> Loading required package: spatstat.explore #> Loading required package: nlme #> spatstat.explore 3.3-4 #> Loading required package: spatstat.model #> Loading required package: rpart #> spatstat.model 3.3-4 #> Loading required package: spatstat.linnet #> spatstat.linnet 3.2-5 #>  #> spatstat 3.3-1  #> For an introduction to spatstat, type ‘beginner’  lam <- function(x, y, m) {(x^2 + y) * ifelse(m == \"A\", 2, 1)} set.seed(227823) spp <- rmpoispp(lambda = lam, win = square(5), types = c(\"A\",\"B\"))  # Compute kernel spectral estimator with fitted intensity by log-linear model: # with Cartesian coordinates KSDE.list <- periodogram_smooth(spp, inten.formula = \"~ x + y\", bandwidth = 1.15) coh.partial <- coherence(KSDE.list, spp) # Compute the maximum partial coherence #> Number of frequencies to pick the maximum partial coherence: 9 (this value should not be too small). attr(coh.partial, \"CohTable\") # Print the partial coherence values for all frequencies #>             omega1    omega2              #> result.1 -2.827433 -2.827433 0.0040862635 #> result.2  0.000000 -2.827433 0.0006695371 #> result.3  2.827433 -2.827433 0.0002041050 #> result.4 -2.827433  0.000000 0.0001230843 #> result.5  0.000000  0.000000 0.0002522640 #> result.6  2.827433  0.000000 0.0001230843 #> result.7 -2.827433  2.827433 0.0002041050 #> result.8  0.000000  2.827433 0.0006695371 #> result.9  2.827433  2.827433 0.0040862635"},{"path":"https://qwding101.github.io/SpecPP/reference/fixpd_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the positive definite issue for a matrix — fixpd_fun","title":"Fix the positive definite issue for a matrix — fixpd_fun","text":"Fix positive definite issue matrix","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/fixpd_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the positive definite issue for a matrix — fixpd_fun","text":"","code":"fixpd_fun(mat)"},{"path":"https://qwding101.github.io/SpecPP/reference/fixpd_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the positive definite issue for a matrix — fixpd_fun","text":"mat complex-valued matrix.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_cate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all pairwise combinations of mark — generate_cate","title":"Generate all pairwise combinations of mark — generate_cate","text":"Generate pairwise combinations mark","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_cate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all pairwise combinations of mark — generate_cate","text":"","code":"generate_cate(cate)"},{"path":"https://qwding101.github.io/SpecPP/reference/generate_cate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all pairwise combinations of mark — generate_cate","text":"cate Vector containing categorical mark point process, can obtained levels(spatstat.geom::marks(ppp)), ppp point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_cate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all pairwise combinations of mark — generate_cate","text":"matrix.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency grid generator — generate_freq","title":"Frequency grid generator — generate_freq","text":"Frequency grid generator","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency grid generator — generate_freq","text":"","code":"generate_freq(A1, A2, ext.factor = NULL, return.comb = FALSE, endpt = 1.5)"},{"path":"https://qwding101.github.io/SpecPP/reference/generate_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency grid generator — generate_freq","text":"A1, A2 Side lengths observational window. ext.factor positive value indicating extension factor frequency. NULL, extension conducted. return.comb Logical. TURE, also return data.frame. endpt positive value indicating scale factor endpoint frequency.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequency grid generator — generate_freq","text":"list two frequency vectors. return.comb = TRUE, also return data.frame containing combinations frequencies.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frequency grid generator — generate_freq","text":"function generates frequency grid used periodogram() periodogram_smooth(). periodogram_smooth(), correct edge effect, ext.factor argument generate_freq() set 2 default. Suppose original frequency ranges -1.5*π 1.5*π. extended frequency ranges -1.5*π*ext.factor 1.5*π*ext.factor.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/generate_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency grid generator — generate_freq","text":"","code":"generate_freq(A1 = 8, A2 = 5, return.comb = TRUE) #> $omega1 #>  [1] -4.7123890 -4.1233404 -3.5342917 -2.9452431 -2.3561945 -1.7671459 #>  [7] -1.1780972 -0.5890486  0.0000000  0.5890486  1.1780972  1.7671459 #> [13]  2.3561945  2.9452431  3.5342917  4.1233404  4.7123890 #>  #> $omega2 #>  [1] -4.7123890 -3.7699112 -2.8274334 -1.8849556 -0.9424778  0.0000000 #>  [7]  0.9424778  1.8849556  2.8274334  3.7699112  4.7123890 #>  #> $omega.comb #>            omega1     omega2 Density #>   [1,] -4.7123890 -4.7123890      NA #>   [2,] -4.1233404 -4.7123890      NA #>   [3,] -3.5342917 -4.7123890      NA #>   [4,] -2.9452431 -4.7123890      NA #>   [5,] -2.3561945 -4.7123890      NA #>   [6,] -1.7671459 -4.7123890      NA #>   [7,] -1.1780972 -4.7123890      NA #>   [8,] -0.5890486 -4.7123890      NA #>   [9,]  0.0000000 -4.7123890      NA #>  [10,]  0.5890486 -4.7123890      NA #>  [11,]  1.1780972 -4.7123890      NA #>  [12,]  1.7671459 -4.7123890      NA #>  [13,]  2.3561945 -4.7123890      NA #>  [14,]  2.9452431 -4.7123890      NA #>  [15,]  3.5342917 -4.7123890      NA #>  [16,]  4.1233404 -4.7123890      NA #>  [17,]  4.7123890 -4.7123890      NA #>  [18,] -4.7123890 -3.7699112      NA #>  [19,] -4.1233404 -3.7699112      NA #>  [20,] -3.5342917 -3.7699112      NA #>  [21,] -2.9452431 -3.7699112      NA #>  [22,] -2.3561945 -3.7699112      NA #>  [23,] -1.7671459 -3.7699112      NA #>  [24,] -1.1780972 -3.7699112      NA #>  [25,] -0.5890486 -3.7699112      NA #>  [26,]  0.0000000 -3.7699112      NA #>  [27,]  0.5890486 -3.7699112      NA #>  [28,]  1.1780972 -3.7699112      NA #>  [29,]  1.7671459 -3.7699112      NA #>  [30,]  2.3561945 -3.7699112      NA #>  [31,]  2.9452431 -3.7699112      NA #>  [32,]  3.5342917 -3.7699112      NA #>  [33,]  4.1233404 -3.7699112      NA #>  [34,]  4.7123890 -3.7699112      NA #>  [35,] -4.7123890 -2.8274334      NA #>  [36,] -4.1233404 -2.8274334      NA #>  [37,] -3.5342917 -2.8274334      NA #>  [38,] -2.9452431 -2.8274334      NA #>  [39,] -2.3561945 -2.8274334      NA #>  [40,] -1.7671459 -2.8274334      NA #>  [41,] -1.1780972 -2.8274334      NA #>  [42,] -0.5890486 -2.8274334      NA #>  [43,]  0.0000000 -2.8274334      NA #>  [44,]  0.5890486 -2.8274334      NA #>  [45,]  1.1780972 -2.8274334      NA #>  [46,]  1.7671459 -2.8274334      NA #>  [47,]  2.3561945 -2.8274334      NA #>  [48,]  2.9452431 -2.8274334      NA #>  [49,]  3.5342917 -2.8274334      NA #>  [50,]  4.1233404 -2.8274334      NA #>  [51,]  4.7123890 -2.8274334      NA #>  [52,] -4.7123890 -1.8849556      NA #>  [53,] -4.1233404 -1.8849556      NA #>  [54,] -3.5342917 -1.8849556      NA #>  [55,] -2.9452431 -1.8849556      NA #>  [56,] -2.3561945 -1.8849556      NA #>  [57,] -1.7671459 -1.8849556      NA #>  [58,] -1.1780972 -1.8849556      NA #>  [59,] -0.5890486 -1.8849556      NA #>  [60,]  0.0000000 -1.8849556      NA #>  [61,]  0.5890486 -1.8849556      NA #>  [62,]  1.1780972 -1.8849556      NA #>  [63,]  1.7671459 -1.8849556      NA #>  [64,]  2.3561945 -1.8849556      NA #>  [65,]  2.9452431 -1.8849556      NA #>  [66,]  3.5342917 -1.8849556      NA #>  [67,]  4.1233404 -1.8849556      NA #>  [68,]  4.7123890 -1.8849556      NA #>  [69,] -4.7123890 -0.9424778      NA #>  [70,] -4.1233404 -0.9424778      NA #>  [71,] -3.5342917 -0.9424778      NA #>  [72,] -2.9452431 -0.9424778      NA #>  [73,] -2.3561945 -0.9424778      NA #>  [74,] -1.7671459 -0.9424778      NA #>  [75,] -1.1780972 -0.9424778      NA #>  [76,] -0.5890486 -0.9424778      NA #>  [77,]  0.0000000 -0.9424778      NA #>  [78,]  0.5890486 -0.9424778      NA #>  [79,]  1.1780972 -0.9424778      NA #>  [80,]  1.7671459 -0.9424778      NA #>  [81,]  2.3561945 -0.9424778      NA #>  [82,]  2.9452431 -0.9424778      NA #>  [83,]  3.5342917 -0.9424778      NA #>  [84,]  4.1233404 -0.9424778      NA #>  [85,]  4.7123890 -0.9424778      NA #>  [86,] -4.7123890  0.0000000      NA #>  [87,] -4.1233404  0.0000000      NA #>  [88,] -3.5342917  0.0000000      NA #>  [89,] -2.9452431  0.0000000      NA #>  [90,] -2.3561945  0.0000000      NA #>  [91,] -1.7671459  0.0000000      NA #>  [92,] -1.1780972  0.0000000      NA #>  [93,] -0.5890486  0.0000000      NA #>  [94,]  0.0000000  0.0000000      NA #>  [95,]  0.5890486  0.0000000      NA #>  [96,]  1.1780972  0.0000000      NA #>  [97,]  1.7671459  0.0000000      NA #>  [98,]  2.3561945  0.0000000      NA #>  [99,]  2.9452431  0.0000000      NA #> [100,]  3.5342917  0.0000000      NA #> [101,]  4.1233404  0.0000000      NA #> [102,]  4.7123890  0.0000000      NA #> [103,] -4.7123890  0.9424778      NA #> [104,] -4.1233404  0.9424778      NA #> [105,] -3.5342917  0.9424778      NA #> [106,] -2.9452431  0.9424778      NA #> [107,] -2.3561945  0.9424778      NA #> [108,] -1.7671459  0.9424778      NA #> [109,] -1.1780972  0.9424778      NA #> [110,] -0.5890486  0.9424778      NA #> [111,]  0.0000000  0.9424778      NA #> [112,]  0.5890486  0.9424778      NA #> [113,]  1.1780972  0.9424778      NA #> [114,]  1.7671459  0.9424778      NA #> [115,]  2.3561945  0.9424778      NA #> [116,]  2.9452431  0.9424778      NA #> [117,]  3.5342917  0.9424778      NA #> [118,]  4.1233404  0.9424778      NA #> [119,]  4.7123890  0.9424778      NA #> [120,] -4.7123890  1.8849556      NA #> [121,] -4.1233404  1.8849556      NA #> [122,] -3.5342917  1.8849556      NA #> [123,] -2.9452431  1.8849556      NA #> [124,] -2.3561945  1.8849556      NA #> [125,] -1.7671459  1.8849556      NA #> [126,] -1.1780972  1.8849556      NA #> [127,] -0.5890486  1.8849556      NA #> [128,]  0.0000000  1.8849556      NA #> [129,]  0.5890486  1.8849556      NA #> [130,]  1.1780972  1.8849556      NA #> [131,]  1.7671459  1.8849556      NA #> [132,]  2.3561945  1.8849556      NA #> [133,]  2.9452431  1.8849556      NA #> [134,]  3.5342917  1.8849556      NA #> [135,]  4.1233404  1.8849556      NA #> [136,]  4.7123890  1.8849556      NA #> [137,] -4.7123890  2.8274334      NA #> [138,] -4.1233404  2.8274334      NA #> [139,] -3.5342917  2.8274334      NA #> [140,] -2.9452431  2.8274334      NA #> [141,] -2.3561945  2.8274334      NA #> [142,] -1.7671459  2.8274334      NA #> [143,] -1.1780972  2.8274334      NA #> [144,] -0.5890486  2.8274334      NA #> [145,]  0.0000000  2.8274334      NA #> [146,]  0.5890486  2.8274334      NA #> [147,]  1.1780972  2.8274334      NA #> [148,]  1.7671459  2.8274334      NA #> [149,]  2.3561945  2.8274334      NA #> [150,]  2.9452431  2.8274334      NA #> [151,]  3.5342917  2.8274334      NA #> [152,]  4.1233404  2.8274334      NA #> [153,]  4.7123890  2.8274334      NA #> [154,] -4.7123890  3.7699112      NA #> [155,] -4.1233404  3.7699112      NA #> [156,] -3.5342917  3.7699112      NA #> [157,] -2.9452431  3.7699112      NA #> [158,] -2.3561945  3.7699112      NA #> [159,] -1.7671459  3.7699112      NA #> [160,] -1.1780972  3.7699112      NA #> [161,] -0.5890486  3.7699112      NA #> [162,]  0.0000000  3.7699112      NA #> [163,]  0.5890486  3.7699112      NA #> [164,]  1.1780972  3.7699112      NA #> [165,]  1.7671459  3.7699112      NA #> [166,]  2.3561945  3.7699112      NA #> [167,]  2.9452431  3.7699112      NA #> [168,]  3.5342917  3.7699112      NA #> [169,]  4.1233404  3.7699112      NA #> [170,]  4.7123890  3.7699112      NA #> [171,] -4.7123890  4.7123890      NA #> [172,] -4.1233404  4.7123890      NA #> [173,] -3.5342917  4.7123890      NA #> [174,] -2.9452431  4.7123890      NA #> [175,] -2.3561945  4.7123890      NA #> [176,] -1.7671459  4.7123890      NA #> [177,] -1.1780972  4.7123890      NA #> [178,] -0.5890486  4.7123890      NA #> [179,]  0.0000000  4.7123890      NA #> [180,]  0.5890486  4.7123890      NA #> [181,]  1.1780972  4.7123890      NA #> [182,]  1.7671459  4.7123890      NA #> [183,]  2.3561945  4.7123890      NA #> [184,]  2.9452431  4.7123890      NA #> [185,]  3.5342917  4.7123890      NA #> [186,]  4.1233404  4.7123890      NA #> [187,]  4.7123890  4.7123890      NA #>"},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodogram of a univatiate point pattern — periodogram","title":"Periodogram of a univatiate point pattern — periodogram","text":"Given multivariate point pattern ppp, compute periodogram marginal point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodogram of a univatiate point pattern — periodogram","text":"","code":"periodogram(   i,   j,   ppp,   inten.formula = \"~1\",   data.covariate = NULL,   a = 0.025,   return.DFT = FALSE,   A1 = NULL,   A2 = A1,   ext.factor = NULL,   endpt = 1.5,   generate_freq. = generate_freq,   taper. = taper,   H.h.lambda.1. = H.h.lambda.1 )"},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodogram of a univatiate point pattern — periodogram","text":"Mark index. element levels(spatstat.geom::marks(ppp)). j Mark index. element levels(spatstat.geom::marks(ppp)). ppp point pattern class \"ppp\". inten.formula formula syntax character format specifying log-liner model intensity function, passed ppm(). default constant intensity inten.formula = \"~1\". data.covariate Optional. values spatial covariates passed data argument ppm(). Taper coefficient, value within unit interval. = 1, taper applied. Default = 0.025. return.DFT TRUE, also return centered discrete Fourier transform (DFT). A1, A2 Optional. Side lengths observation window. ext.factor Optional. NULL (default), frequency grid periodogram extended. Please keep NULL unless know . endpt positive value indicating scale factor endpoint frequency. generate_freq., taper., H.h.lambda.1. Functions respective .R files.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodogram of a univatiate point pattern — periodogram","text":"matrix return.DFT = FALSE; list consisting periodogram centered DFT return.DFT = TRUE.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","title":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","text":"Computes kernel spectral estimator multivatiate (multitype) point pattern.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","text":"","code":"periodogram_smooth(   ppp,   i = NULL,   j = i,   inten.formula = \"~1\",   data.covariate = NULL,   bandwidth,   correct = TRUE,   a = 0.025,   A1 = NULL,   A2 = A1,   endpt = 1.5,   equal = TRUE,   kern = bartlett_uni )"},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","text":"ppp point pattern class \"ppp\". Mark index. element levels(spatstat.geom::marks(ppp)). j Mark index. element levels(spatstat.geom::marks(ppp)). inten.formula formula syntax character format specifying log-liner model intensity function, passed ppm(). default constant intensity inten.formula = \"~1\". data.covariate Optional. values spatial covariates passed data argument ppm. bandwidth positive value indicating bandwidth kernel, determined select_band(). correct Logical. TRUE (default), conduct edge correction computing kernel spectral estimator. Taper coefficient, value within unit interval. = 1, taper applied. Default = 0.025. A1, A2 Optional. Side lengths observation window. endpt positive value indicating scale factor endpoint frequency. equal Logical. TRUE, use bandwidth x y direction. kern Univariate scaled kernel function. default Barrlett kernel.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram_smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","text":"list matrices, single matrix j specified.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram_smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","text":"minimal required arguments ppp, inten.formula, bandwidth. use spatial covariate Cartesian coordinates inten.formula, data.covariate also needed. arguments can left default setting. periodogram_smooth() computes pairwise (marginal cross-) kernel spectral estimators automatically mark indices j unspecified. j specified, computes result mark combination. bandwidth can determined select_band().","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/periodogram_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kernel spectral estimator of a multivatiate (multitype) point pattern — periodogram_smooth","text":"","code":"library(spatstat) lam <- function(x, y, m) {(x^2 + y) * ifelse(m == \"A\", 2, 1)} spp <- rmpoispp(lambda = lam, win = square(5), types = c(\"A\",\"B\"))  # Compute kernel spectral estimator with intensity fitted by log-linear model # with Cartesian coordinates ksde = periodogram_smooth(spp, inten.formula = \"~ x + y\", bandwidth = 1.2) lapply(ksde, round, 2) #> $`A, A` #>                    -4.71238898038469 -3.76991118430775 -2.82743338823081 #> -4.71238898038469               0.20              0.40              0.54 #> -3.76991118430775               0.54              0.38              0.85 #> -2.82743338823081               0.54              0.36              0.85 #> -1.88495559215388               0.52              0.41              0.32 #> -0.942477796076938              0.57              0.98              0.61 #> 0                               0.50              0.85              0.56 #> 0.942477796076938               0.43              0.75              0.50 #> 1.88495559215388                0.23              0.50              0.68 #> 2.82743338823081                0.24              0.31              0.34 #> 3.76991118430775                0.33              0.27              0.22 #> 4.71238898038469                0.33              0.51              0.84 #>                    -1.88495559215388 -0.942477796076938    0 0.942477796076938 #> -4.71238898038469               0.31               0.31 0.25              0.22 #> -3.76991118430775               0.87               0.37 0.22              0.19 #> -2.82743338823081               1.19               0.55 0.34              0.44 #> -1.88495559215388               0.39               0.49 0.37              0.31 #> -0.942477796076938              0.46               0.88 0.32              0.27 #> 0                               0.62               0.58 0.23              0.58 #> 0.942477796076938               0.32               0.27 0.32              0.88 #> 1.88495559215388                0.23               0.31 0.37              0.49 #> 2.82743338823081                0.23               0.44 0.34              0.55 #> 3.76991118430775                0.18               0.19 0.22              0.37 #> 4.71238898038469                0.56               0.22 0.25              0.31 #>                    1.88495559215388 2.82743338823081 3.76991118430775 #> -4.71238898038469              0.56             0.84             0.51 #> -3.76991118430775              0.18             0.22             0.27 #> -2.82743338823081              0.23             0.34             0.31 #> -1.88495559215388              0.23             0.68             0.50 #> -0.942477796076938             0.32             0.50             0.75 #> 0                              0.62             0.56             0.85 #> 0.942477796076938              0.46             0.61             0.98 #> 1.88495559215388               0.39             0.32             0.41 #> 2.82743338823081               1.19             0.85             0.36 #> 3.76991118430775               0.87             0.85             0.38 #> 4.71238898038469               0.31             0.54             0.40 #>                    4.71238898038469 #> -4.71238898038469              0.33 #> -3.76991118430775              0.33 #> -2.82743338823081              0.24 #> -1.88495559215388              0.23 #> -0.942477796076938             0.43 #> 0                              0.50 #> 0.942477796076938              0.57 #> 1.88495559215388               0.52 #> 2.82743338823081               0.54 #> 3.76991118430775               0.54 #> 4.71238898038469               0.20 #>  #> $`A, B` #>                    -4.71238898038469 -3.76991118430775 -2.82743338823081 #> -4.71238898038469         0.05+0.03i        0.13-0.26i        0.07-0.28i #> -3.76991118430775         0.10+0.13i        0.11-0.03i       -0.22-0.06i #> -2.82743338823081        -0.04-0.15i       -0.04-0.01i       -0.24-0.04i #> -1.88495559215388        -0.07-0.24i       -0.15-0.02i       -0.13+0.05i #> -0.942477796076938       -0.02-0.13i       -0.29-0.11i       -0.14+0.13i #> 0                        -0.05-0.23i       -0.31-0.13i       -0.14+0.07i #> 0.942477796076938        -0.04-0.22i       -0.21-0.11i       -0.04-0.02i #> 1.88495559215388          0.07-0.11i        0.09-0.10i        0.09-0.05i #> 2.82743338823081          0.11-0.01i        0.16+0.04i       -0.04+0.06i #> 3.76991118430775          0.18-0.05i        0.18+0.04i        0.03+0.09i #> 4.71238898038469          0.12-0.02i        0.13+0.10i        0.04+0.39i #>                    -1.88495559215388 -0.942477796076938           0 #> -4.71238898038469         0.00-0.06i        -0.03-0.15i -0.03-0.03i #> -3.76991118430775        -0.03+0.13i        -0.02-0.04i -0.08+0.01i #> -2.82743338823081        -0.06+0.00i         0.05-0.01i  0.09+0.04i #> -1.88495559215388        -0.04+0.00i         0.14+0.05i  0.15+0.19i #> -0.942477796076938        0.07-0.03i         0.20+0.07i  0.07+0.12i #> 0                        -0.05-0.13i         0.04-0.02i  0.01+0.00i #> 0.942477796076938        -0.07+0.07i         0.08-0.02i  0.07-0.12i #> 1.88495559215388         -0.05-0.01i         0.04-0.15i  0.15-0.19i #> 2.82743338823081         -0.13-0.02i         0.06-0.10i  0.09-0.04i #> 3.76991118430775         -0.02+0.03i        -0.01-0.06i -0.08-0.01i #> 4.71238898038469         -0.27-0.01i        -0.08-0.11i -0.03+0.03i #>                    0.942477796076938 1.88495559215388 2.82743338823081 #> -4.71238898038469        -0.08+0.11i      -0.27+0.01i       0.04-0.39i #> -3.76991118430775        -0.01+0.06i      -0.02-0.03i       0.03-0.09i #> -2.82743338823081         0.06+0.10i      -0.13+0.02i      -0.04-0.06i #> -1.88495559215388         0.04+0.15i      -0.05+0.01i       0.09+0.05i #> -0.942477796076938        0.08+0.02i      -0.07-0.07i      -0.04+0.02i #> 0                         0.04+0.02i      -0.05+0.13i      -0.14-0.07i #> 0.942477796076938         0.20-0.07i       0.07+0.03i      -0.14-0.13i #> 1.88495559215388          0.14-0.05i      -0.04+0.00i      -0.13-0.05i #> 2.82743338823081          0.05+0.01i      -0.06+0.00i      -0.24+0.04i #> 3.76991118430775         -0.02+0.04i      -0.03-0.13i      -0.22+0.06i #> 4.71238898038469         -0.03+0.15i       0.00+0.06i       0.07+0.28i #>                    3.76991118430775 4.71238898038469 #> -4.71238898038469        0.13-0.10i       0.12+0.02i #> -3.76991118430775        0.18-0.04i       0.18+0.05i #> -2.82743338823081        0.16-0.04i       0.11+0.01i #> -1.88495559215388        0.09+0.10i       0.07+0.11i #> -0.942477796076938      -0.21+0.11i      -0.04+0.22i #> 0                       -0.31+0.13i      -0.05+0.23i #> 0.942477796076938       -0.29+0.11i      -0.02+0.13i #> 1.88495559215388        -0.15+0.02i      -0.07+0.24i #> 2.82743338823081        -0.04+0.01i      -0.04+0.15i #> 3.76991118430775         0.11+0.03i       0.10-0.13i #> 4.71238898038469         0.13+0.26i       0.05-0.03i #>  #> $`B, B` #>                    -4.71238898038469 -3.76991118430775 -2.82743338823081 #> -4.71238898038469               0.22              0.37              0.30 #> -3.76991118430775               0.19              0.29              0.24 #> -2.82743338823081               0.14              0.11              0.14 #> -1.88495559215388               0.18              0.16              0.19 #> -0.942477796076938              0.11              0.17              0.17 #> 0                               0.18              0.20              0.16 #> 0.942477796076938               0.19              0.15              0.11 #> 1.88495559215388                0.17              0.13              0.12 #> 2.82743338823081                0.18              0.17              0.19 #> 3.76991118430775                0.23              0.18              0.23 #> 4.71238898038469                0.10              0.12              0.37 #>                    -1.88495559215388 -0.942477796076938    0 0.942477796076938 #> -4.71238898038469               0.15               0.18 0.18              0.20 #> -3.76991118430775               0.11               0.08 0.13              0.13 #> -2.82743338823081               0.06               0.04 0.10              0.14 #> -1.88495559215388               0.13               0.11 0.23              0.21 #> -0.942477796076938              0.14               0.11 0.15              0.20 #> 0                               0.16               0.07 0.05              0.07 #> 0.942477796076938               0.26               0.20 0.15              0.11 #> 1.88495559215388                0.32               0.21 0.23              0.11 #> 2.82743338823081                0.38               0.14 0.10              0.04 #> 3.76991118430775                0.32               0.13 0.13              0.08 #> 4.71238898038469                0.39               0.20 0.18              0.18 #>                    1.88495559215388 2.82743338823081 3.76991118430775 #> -4.71238898038469              0.39             0.37             0.12 #> -3.76991118430775              0.32             0.23             0.18 #> -2.82743338823081              0.38             0.19             0.17 #> -1.88495559215388              0.32             0.12             0.13 #> -0.942477796076938             0.26             0.11             0.15 #> 0                              0.16             0.16             0.20 #> 0.942477796076938              0.14             0.17             0.17 #> 1.88495559215388               0.13             0.19             0.16 #> 2.82743338823081               0.06             0.14             0.11 #> 3.76991118430775               0.11             0.24             0.29 #> 4.71238898038469               0.15             0.30             0.37 #>                    4.71238898038469 #> -4.71238898038469              0.10 #> -3.76991118430775              0.23 #> -2.82743338823081              0.18 #> -1.88495559215388              0.17 #> -0.942477796076938             0.19 #> 0                              0.18 #> 0.942477796076938              0.11 #> 1.88495559215388               0.18 #> 2.82743338823081               0.14 #> 3.76991118430775               0.19 #> 4.71238898038469               0.22 #>"},{"path":"https://qwding101.github.io/SpecPP/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://qwding101.github.io/SpecPP/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/plot_coher.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coherence and partial coherence — plot_coher","title":"Plot coherence and partial coherence — plot_coher","text":"Use ggplot2 package visualize coherence partial coherence.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/plot_coher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coherence and partial coherence — plot_coher","text":"","code":"plot_coher(sp.est, coh.mat, partial.coh.mat, xnorm = TRUE, ylim = NULL)"},{"path":"https://qwding101.github.io/SpecPP/reference/plot_coher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coherence and partial coherence — plot_coher","text":"sp.est List. kernel spectral density estimate periodogram_smooth(). coh.mat Coherence matrix coherence() type = \"normal\". partial.coh.mat Partial coherence matrix coherence() type = \"partial\". xnorm Logical. TRUE (default), plot radial averaged values. FALSE, plot raw coherence partial coherence values via heatmap. ylim numeric vector c(lower, upper) specify range draw radially-averaged plot. required xnorm = FALSE.","code":""},{"path":[]},{"path":"https://qwding101.github.io/SpecPP/reference/plot_coher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot coherence and partial coherence — plot_coher","text":"","code":"library(spatstat) lam <- function(x, y, m) {(x^2 + y) * ifelse(m == \"A\", 2, 1)} set.seed(227823) spp <- rmpoispp(lambda = lam, win = square(5), types = c(\"A\",\"B\"))  KSDE.list <- periodogram_smooth(spp, inten.formula = \"~ x + y\", bandwidth = 1.15) coh.partial <- coherence(KSDE.list, spp) #> Number of frequencies to pick the maximum partial coherence: 9 (this value should not be too small). coh <- coherence(KSDE.list, spp, type = \"normal\") #> Number of frequencies to pick the maximum coherence: 9 (this value should not be too small). plot_coher(KSDE.list, coh, coh.partial)"},{"path":"https://qwding101.github.io/SpecPP/reference/plot_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all possible spectral density estimates — plot_pairs","title":"Plot all possible spectral density estimates — plot_pairs","text":"Given multivariate (multitype) point pattern, use ggplot2 package visualize (marginal joint) spectral density estimates.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/plot_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all possible spectral density estimates — plot_pairs","text":"","code":"plot_pairs(   est.list,   ppp,   xnorm = TRUE,   type = \"Re\",   shared.legend = TRUE,   remove = NULL )"},{"path":"https://qwding101.github.io/SpecPP/reference/plot_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all possible spectral density estimates — plot_pairs","text":"est.list List. kernel spectral density estimate periodogram_smooth(). ppp point pattern class \"ppp\". xnorm Logical. TRUE (default), plot radially-averaged spectral estimates. Otherwise, plot raw values heatmap. type type = \"Re\" (default), plot real part estimates. type = \"Im\", plot imaginary part. shared.legend Logical. Whether share legend across plots. remove experimental feature. Please ignore.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/plot_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot all possible spectral density estimates — plot_pairs","text":"","code":"library(spatstat) lam <- function(x, y, m) {(x^2 + y) * ifelse(m == \"A\", 2, 1)} set.seed(227823) spp <- rmpoispp(lambda = lam, win = square(5), types = c(\"A\",\"B\")) KSDE.list <- periodogram_smooth(spp, inten.formula = \"~ x + y\", bandwidth = 1.15)  plot_pairs(est.list = KSDE.list, ppp = spp)  plot_pairs(est.list = KSDE.list, ppp = spp, type = \"Im\")  plot_pairs(est.list = KSDE.list, ppp = spp, xnorm = FALSE)  plot_pairs(est.list = KSDE.list, ppp = spp, xnorm = FALSE, type = \"Im\")"},{"path":"https://qwding101.github.io/SpecPP/reference/plot_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual spectral density estimate — plot_period","title":"Plot individual spectral density estimate — plot_period","text":"Use ggplot2 package plot heatmap single periodogram kernel spectral density estimate.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/plot_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual spectral density estimate — plot_period","text":"","code":"plot_period(   period,   freq.list = NULL,   type = \"Re\",   remove = NULL,   title = NULL,   palette = \"Spectral\",   legend.range = NULL )"},{"path":"https://qwding101.github.io/SpecPP/reference/plot_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual spectral density estimate — plot_period","text":"period Matrix. Output periodogram() periodogram_smooth(). freq.list List. Output generate_freq() return.comb = TRUE. type type = \"Re\" (default), plot real part estimate. type = \"Im\", plot imaginary part. argument useful cross- spectrum estimate, complex-valued. remove experimental feature. Please ignore. title Character. title plot. palette Color schemes visualization. Type ?scale_fill_distiller() check available options. legend.range Input c(lower, upper) manually set lower upper limit spectral density visualize.","code":""},{"path":[]},{"path":"https://qwding101.github.io/SpecPP/reference/plot_period.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot individual spectral density estimate — plot_period","text":"","code":"library(spatstat) lam <- function(x, y, m) {(x^2 + y) * ifelse(m == \"A\", 2, 1)} set.seed(227823) spp <- rmpoispp(lambda = lam, win = square(5), types = c(\"A\",\"B\")) KSDE.list <- periodogram_smooth(spp, inten.formula = \"~ x + y\", bandwidth = 1.15) names(KSDE.list) #> [1] \"A, A\" \"A, B\" \"B, B\"  freq.list <- attr(KSDE.list, \"freq.list\") plot_period(KSDE.list[[1]], freq.list = freq.list,             title = \"Kernel spectral estimate: type A\")  plot_period(KSDE.list[[2]], freq.list = freq.list,             title = \"Kernel spectral estimate: cross-spectrum (Real part)\")  plot_period(KSDE.list[[2]], freq.list = freq.list, type = \"Im\",             title = \"Kernel spectral estimate: cross-spectrum (Imaginary part)\")  plot_period(KSDE.list[[3]], freq.list = freq.list,             title = \"Kernel spectral estimate: type B\")"},{"path":"https://qwding101.github.io/SpecPP/reference/scale2unitarea.html","id":null,"dir":"Reference","previous_headings":"","what":"Recale the rectangular image to unit square — scale2unitarea","title":"Recale the rectangular image to unit square — scale2unitarea","text":"Recale rectangular image unit square","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/scale2unitarea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recale the rectangular image to unit square — scale2unitarea","text":"","code":"scale2unitarea(im, length.x, length.y, return.fun = TRUE)"},{"path":"https://qwding101.github.io/SpecPP/reference/scale2unitarea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recale the rectangular image to unit square — scale2unitarea","text":"im Pixel image object class \"im\" function spatial location class \"funxy\" spatstat package. length.x, length.y Numeric. Side lengths. return.fun Logical. TRUE, convert scaled image function. Otherwise, return image .","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/select_band.html","id":null,"dir":"Reference","previous_headings":"","what":"Bandwidth selection procedure for kernel spectral estimator — select_band","title":"Bandwidth selection procedure for kernel spectral estimator — select_band","text":"Bandwidth selection procedure kernel spectral estimator","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/select_band.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bandwidth selection procedure for kernel spectral estimator — select_band","text":"","code":"select_band(   ppp,   inten.formula = NULL,   data.covariate = NULL,   a = 0.025,   band.range,   correct = TRUE,   A1 = NULL,   A2 = A1,   endpt = 1.5,   equal = TRUE,   kern = bartlett_uni )"},{"path":"https://qwding101.github.io/SpecPP/reference/select_band.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bandwidth selection procedure for kernel spectral estimator — select_band","text":"ppp point pattern class \"ppp\". inten.formula formula syntax character format specifying log-liner model intensity function, passed ppm(). default constant intensity inten.formula = \"~1\". data.covariate Optional. values spatial covariates passed data argument ppm(). Taper coefficient, value within unit interval. = 1, taper applied. band.range Numeric vector. Search space optimal bandwidth. correct Logical. TRUE (default), conduct edge correction computing kernel spectral estimator. A1, A2 Optional. Side lengths observation window. endpt positive value indicating scale factor endpoint frequency. equal Logical. Whether use bandwidth x y axis. default TRUE. kern Univariate scaled kernel function. default Barlett kernel.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/select_band.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bandwidth selection procedure for kernel spectral estimator — select_band","text":"list.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/select_band.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bandwidth selection procedure for kernel spectral estimator — select_band","text":"","code":"library(spatstat) lam <- function(x, y, m) {(x^2 + y) * ifelse(m == \"A\", 2, 1)} set.seed(227823) spp <- rmpoispp(lambda = lam, win = square(5), types = c(\"A\",\"B\")) b <- seq(0.95, 1.4, 0.05) # You may use finer grid to search optimal bandwidth  cv <- select_band(spp, inten.formula = \"~ x + y\", band.range = b) cv$OptimalBandwidth # Print the optimal bandwidth #> Bandwidth  #>      1.15  plot(cv$Result[1,], cv$Result[2,], type = \"b\", pch = 20, las = 1,      xlab = \"Bandwidth\", ylab = \"Whittle likelihood\") abline(v = cv$OptimalBandwidth, col = \"blue\")"},{"path":"https://qwding101.github.io/SpecPP/reference/smoother.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth an element from a matrix by averaging its neighbors — smoother","title":"Smooth an element from a matrix by averaging its neighbors — smoother","text":"Smooth element matrix averaging neighbors","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/smoother.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth an element from a matrix by averaging its neighbors — smoother","text":"","code":"smoother(w, period.mat, w.k1, w.k2, b1 = 1, b2 = b1, loo = FALSE, kernel_uni)"},{"path":"https://qwding101.github.io/SpecPP/reference/smoother.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth an element from a matrix by averaging its neighbors — smoother","text":"w Single frequency smoothed. period.mat Matrix. naive spectral estimate (.e., periodogram), complex-valued. w.k1, w.k2 Vectors containing whole frequencies horizontal vertical directions. b1, b2 Numeric. Bandwidths horizontal vertical direction, respectively. loo Logical. TRUE, conduct leave-one-kernel smoothing (center w excluded averaging). Otherwise, keep center w averaging. kernel_uni Univariate kernel function.","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/taper.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate data taper — taper","title":"Univariate data taper — taper","text":"Univariate data taper","code":""},{"path":"https://qwding101.github.io/SpecPP/reference/taper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate data taper — taper","text":"","code":"taper(x, a)"},{"path":"https://qwding101.github.io/SpecPP/reference/taper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate data taper — taper","text":"x Cartesian coordinate events. argument vectorized. value unit interval. = 1, taper applied.","code":""}]
